name: Monthly Pull Requests metrics

#on:
#  workflow_dispatch:
#  schedule:
#    - cron: '3 2 1 * *'

on: [pull_request]

jobs:
  build:
    name: pr metrics
    runs-on: ubuntu-latest

    steps:

    - name: Test even
      shell: bash
      run: |
        webhook_json="$INPUT_GHEVENT"
        # pr_comment=$(jq . <<< "$webhook_json")
        jq . <<< "$webhook_json"

        echo "$TOK" | wc
      env:
        INPUT_GHEVENT: ${{ toJSON(github.event) }}
        TOK: ${{ github.token }}

    - name: Get dates for last month
      shell: bash
      run: |
        # Get the current date
        current_date=$(date +'%Y-%m-%d')

        # Calculate the previous month
        previous_date=$(date -d "$current_date -1 month" +'%Y-%m-%d')

        # Extract the year and month from the previous date
        previous_year=$(date -d "$previous_date" +'%Y')
        previous_month=$(date -d "$previous_date" +'%m')

        # Calculate the first day of the previous month
        first_day=$(date -d "$previous_year-$previous_month-01" +'%Y-%m-%d')

        # Calculate the last day of the previous month
        last_day=$(date -d "$first_day +1 month -1 day" +'%Y-%m-%d')

        echo "$first_day..$last_day"
        echo "last_month=$first_day..$last_day" >> "$GITHUB_ENV"

    - name: Run issue-metrics tool
      uses: github/issue-metrics@v2
      env:
        GH_TOKEN: ${{ github.token }}
        SEARCH_QUERY: 'repo:lezhumain/SplitMan2 is:pr created:${{ env.last_month }} -reason:"not planned"'

    - name: Change title
      shell: bash
      run: |
        sed -i "s|Issue Metrics|Pull Request Metrics|" ./issue_metrics.md
        # pr_comment=$(jq . <<< "$webhook_json")

    - name: Check output file
      shell: bash
      run: |
        ls -alh ./issue_metrics.md
        du -sh ./issue_metrics.md

    - name: Create issue
      uses: peter-evans/create-issue-from-file@v5
      with:
        title: Monthly issue metrics report
        content-filepath: ./issue_metrics.md
        assignees: ""
        labels: |
            report
        token: ${{ github.token }}
