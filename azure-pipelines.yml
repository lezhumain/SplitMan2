# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: ubuntu-latest

steps:
- script: echo Hello, world!
  displayName: 'Run a one-line script'

- script: |
    node -v
    npm -v
    #exit 1

    echo Add other tasks to build, test, and deploy your project.
    echo See https://aka.ms/yaml
    CURRENT="$(pwd)"

    #git clone git@github.com:lezhumain/SplitMan2-API.git
    #git clone git@github.com:lezhumain/SplitMan2-nginx.git
    #cd "$CURRENT"
    HOST_IP="127.0.0.1"
    USE_HTTPS="USE"

    # buid all
    function update_dir()
    {
            local DPATH="$1/$2"
            local DNAME="$2"
            local DBRANCH="master"
            if [ -n "$3" ]; then
                    DBRANCH="$3"
            fi

            cd "$DPATH"
            if [ -z "$USE_HTTPS" ]; then
                    git stash
                    git checkout master
                    git pull
            else
                    cd ..
                    rm -rf "$DNAME" || true
                    curl "https://codeload.github.com/lezhumain/$DNAME/zip/refs/heads/$DBRANCH" -o master.zip
                    ls
                    unzip master.zip
                    ls
                    mv "$DNAME-$DBRANCH" "$DNAME"
                    cd "$DNAME"
            fi
    }

    bash doBuild.sh "https://$HOST_IP:8081" "/api" # web

    update_dir ".." "SplitMan2-nginx" "main"
    #bash doBuild.sh "http://$HOST_IP" # nginx

    update_dir ".." "SplitMan2-API"
    #bash doBuild.sh "https://$HOST_IP:8081" # api

    #update_dir ".." "SplitMan2"
    #bash doBuild.sh "https://$HOST_IP:8081" "/api" # web

    cd "$CURRENT"
    ls
    pwd

    #docker-compose up -d

    #WEB_UP="$(curl -s "$HOST_IP:4200/login")"
    #while [ -z "$WEB_UP" ]
    #do
    #  sleep 2
    #  WEB_UP="$(curl -s "$HOST_IP:4200/login")"
    #done

    #npm ci
    #npm run e2e -- --headless=true
  displayName: 'Run E2E'
