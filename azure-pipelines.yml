# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: ubuntu-latest

steps:
  - task: DownloadSecureFile@1
    name: sslCert
    displayName: 'Download cert'
    inputs:
      secureFile: 'example.crt'

  - task: DownloadSecureFile@1
    name: sslKey
    displayName: 'Download key'
    inputs:
      secureFile: 'example.key'

  - script: |
      sudo chown $(whoami):root $(sslCert.secureFilePath)
      sudo chmod 600 $(sslCert.secureFilePath)
      sudo chown $(whoami):root $(sslKey.secureFilePath)
      sudo chmod 600 $(sslKey.secureFilePath)
      mkdir -p ~/.ssl
      sudo ln -s $(sslCert.secureFilePath) ~/.ssl/example.crt
      sudo ln -s $(sslKey.secureFilePath) ~/.ssl/example.key
    displayName: 'Prepare SSL key and cert'

- script: |
    node -v
    npm -v
    #exit 1

    echo Add other tasks to build, test, and deploy your project.
    echo See https://aka.ms/yaml
    CURRENT="$(pwd)"

    #git clone git@github.com:lezhumain/SplitMan2-API.git
    #git clone git@github.com:lezhumain/SplitMan2-nginx.git
    #cd "$CURRENT"
    HOST_IP="127.0.0.1"
    USE_HTTPS="USE"

    # buid all
    function update_dir()
    {
            local DPATH="$1/$2"
            local DNAME="$2"
            local DBRANCH="master"
            if [ -n "$3" ]; then
                    DBRANCH="$3"
            fi

            cd "$DPATH"
            if [ -z "$USE_HTTPS" ]; then
                    git stash
                    git checkout master
                    git pull
            else
                    cd ..
                    rm -rf "$DNAME" || true
                    curl "https://codeload.github.com/lezhumain/$DNAME/zip/refs/heads/$DBRANCH" -o master.zip
                    ls
                    unzip master.zip
                    ls
                    mv "$DNAME-$DBRANCH" "$DNAME"
                    cd "$DNAME"
            fi
    }

    bash doBuild.sh "https://$HOST_IP:8081" "/api" # web

    export CERT_PATH="~/.ssl/example"
    update_dir ".." "SplitMan2-nginx" "main"
    bash doBuild.sh "http://$HOST_IP" # nginx

    update_dir ".." "SplitMan2-API"
    bash doBuild.sh "https://$HOST_IP:8081" # api

    cd "$CURRENT"
    #ls
    #pwd

    docker images

    #docker-compose up -d
    #if [ "$?" != "0" ]; then
    #  exit 1
    #fi

    #sleep 40
    #WEB_UP="$(curl -s "$HOST_IP:4200/login")"
    ##while [ -z "$WEB_UP" ]
    ##do
    ##  sleep 2
    ##  WEB_UP="$(curl -s "$HOST_IP:4200/login")"
    ##done
    #if [ -z "$WEB_UP" ]; then
    #  exit 1
    #fi

    #npm ci
    #npm run e2e -- --headless=true
  displayName: 'Run E2E'
